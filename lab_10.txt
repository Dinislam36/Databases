EXERCISE 1.


Read committed ISOLATION LEVEL


ACCOUNT INFORMATION ON 1st STEP (T1):

 username |     fullname     | balance | group_id 
----------+------------------+---------+----------
 jones    | Alice Jones      |      82 |        1
 bitdiddl | Ben Bitdiddle    |      65 |        1
 mike     | Michael Dole     |      73 |        2
 alyssa   | Alyssa P. Hacker |      79 |        3
 bbrown   | Bob Brown        |     100 |        3
(5 rows)


ACCOUNT INFO ON 3rd STEP (T1):

 username |     fullname     | balance | group_id 
----------+------------------+---------+----------
 jones    | Alice Jones      |      82 |        1
 bitdiddl | Ben Bitdiddle    |      65 |        1
 mike     | Michael Dole     |      73 |        2
 alyssa   | Alyssa P. Hacker |      79 |        3
 bbrown   | Bob Brown        |     100 |        3
(5 rows)


ACCOUNT INFO ON 4th STEP (T2):

 username |     fullname     | balance | group_id 
----------+------------------+---------+----------
 bitdiddl | Ben Bitdiddle    |      65 |        1
 mike     | Michael Dole     |      73 |        2
 alyssa   | Alyssa P. Hacker |      79 |        3
 bbrown   | Bob Brown        |     100 |        3
 ajones   | Alice Jones      |      82 |        1
(5 rows)


--------------------------------------------------
WE HAVE DIFFERENT OUTPUTS BECAUSE SECOND TERMINAL HAVEN'T COMMITED
CHANGES YET, BUT T1 SEES ONLY COMMITED RESULTS. (DIRTY READ OCCURES)
--------------------------------------------------


ACCOUNT INFO ON T1 AFTER COMMIT (STEP 5):

 username |     fullname     | balance | group_id 
----------+------------------+---------+----------
 bitdiddl | Ben Bitdiddle    |      65 |        1
 mike     | Michael Dole     |      73 |        2
 alyssa   | Alyssa P. Hacker |      79 |        3
 bbrown   | Bob Brown        |     100 |        3
 ajones   | Alice Jones      |      82 |        1
(5 rows)

ACCOUNT INFO ON T2 AFTER COMMIT (STEP 5)

 username |     fullname     | balance | group_id 
----------+------------------+---------+----------
 bitdiddl | Ben Bitdiddle    |      65 |        1
 mike     | Michael Dole     |      73 |        2
 alyssa   | Alyssa P. Hacker |      79 |        3
 bbrown   | Bob Brown        |     100 |        3
 ajones   | Alice Jones      |      82 |        1
(5 rows)

-------------------------------------------------
AFTER COMMIT ALL OK, BOTH TERMINALS SYNC
-------------------------------------------------


AT THE 8th STEP psql IS CRASHED, BECAUSE DIRTY READ OCCURED.
T1 CHANGES balance VAR, THEN T2 TRIES TO READ IT, BUT IT
UNCOMMITED, THEN DIRTY READ OCCURES.

AFTER COMMIT, TRANSACTION ON T1 IS WORKED, WHILE ON T2
ROLLBACK, THEN UPDATES Alice's balance by 10


EXERCISE 2 (Read commited):

AT SELECT ON T1 SHOWS ONLY 1 person in group 2
AFTER MOVING Bob TO GROUP 2, ON T1 ALSO SHOWS ONLY 1 PERSON (DIRTY READ)
THEN, ON UPDATE BALANCE, T1 IS CRASHED.
IF COMMIT T2 FIRST, THEN T1 IS RECOVER, AND BOTH TRANSACTION APPLIES.

EXERCISE 2 (Repeatable read):

SAME AS Read commited, BUT IS COMMIT T2 FIRST, ONLY
T2 APPLIES, AND T1 ROLLBACKS.

EXERCISE 3 (Repeatable read):

BOB MOVED TO GROUP 2, BUT BALANCE WASN'T UPDATED FOR HIM
BALANCE FOR MIKE WAS UPDATED.

THIS HAPPENS BECAUSE ON T1 WE UPDATE BALANCE FOR GROUP 2, BUT TRANSACTION ON T2 HAVEN'T
APPLIED YET.

EXERCISE 3 (Serializable):

IN THIS ISOLATION LEVEL BOB MOVED TO GROUP 2, BUT BALANCE WASN'T 
UPDATED FOR BOTH MIKE AND BOB.

